// <auto-generated />
using System;
using ECommerceApp.Product.Api.Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceApp.Product.Api.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250221103812_AddedProductTable")]
    partial class AddedProductTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerceApp.Product.Api.Domain.Model.Catagory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatagoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("catagories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatagoryName = "Fruits"
                        },
                        new
                        {
                            Id = 2,
                            CatagoryName = "Vegetables"
                        });
                });

            modelBuilder.Entity("ECommerceApp.Product.Api.Domain.Model.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ManufactureDate")
                        .HasColumnType("date");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductId");

                    b.HasIndex("Id");

                    b.ToTable("productss");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ExpiryDate = new DateOnly(2025, 5, 21),
                            Id = 1,
                            ManufactureDate = new DateOnly(2025, 2, 21),
                            Price = 150.0,
                            ProductName = "Apple"
                        },
                        new
                        {
                            ProductId = 2,
                            ExpiryDate = new DateOnly(2025, 2, 24),
                            Id = 2,
                            ManufactureDate = new DateOnly(2025, 2, 19),
                            Price = 42.0,
                            ProductName = "Brinjal"
                        });
                });

            modelBuilder.Entity("ECommerceApp.Product.Api.Domain.Model.Products", b =>
                {
                    b.HasOne("ECommerceApp.Product.Api.Domain.Model.Catagory", "Catagory")
                        .WithMany("Products")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catagory");
                });

            modelBuilder.Entity("ECommerceApp.Product.Api.Domain.Model.Catagory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
